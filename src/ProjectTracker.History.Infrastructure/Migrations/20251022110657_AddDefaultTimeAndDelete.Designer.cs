// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectTracker.History.Infrastructure;

#nullable disable

namespace ProjectTracker.History.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251022110657_AddDefaultTimeAndDelete")]
    partial class AddDefaultTimeAndDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectTracker.History.Infrastructure.Models.TaskHistoryMetaModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("TaskId")
                        .HasColumnType("bigint")
                        .HasColumnName("task_id");

                    b.HasKey("Id");

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("task_history_meta", (string)null);
                });

            modelBuilder.Entity("ProjectTracker.History.Infrastructure.Models.TaskHistoryRecordModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ChangeEventType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("change_event_type");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<long>("MetaId")
                        .HasColumnType("bigint")
                        .HasColumnName("meta_id");

                    b.Property<string>("NewValue")
                        .HasColumnType("text")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .HasColumnType("text")
                        .HasColumnName("old_value");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("property");

                    b.HasKey("Id");

                    b.HasIndex("MetaId");

                    b.ToTable("task_history_record", (string)null);
                });

            modelBuilder.Entity("ProjectTracker.History.Infrastructure.Models.TaskHistoryRecordModel", b =>
                {
                    b.HasOne("ProjectTracker.History.Infrastructure.Models.TaskHistoryMetaModel", "Meta")
                        .WithMany("TaskHistoryRecords")
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meta");
                });

            modelBuilder.Entity("ProjectTracker.History.Infrastructure.Models.TaskHistoryMetaModel", b =>
                {
                    b.Navigation("TaskHistoryRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
