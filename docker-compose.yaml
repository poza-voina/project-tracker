version: "3.8"

services:
  project-tracker.api:
    image: project-tracker.api
    build:
      context: .
      dockerfile: src/ProjectTracker.Api/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
        - "${PROJECT_TRACKER_API_PORT}:80"
    environment:
      - ConnectionStrings__PostgreSqlConnection=Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__VirtualHost=${RABBITMQ_VHOST}
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}

  project-tracker.pdf-report:
    image: project-tracker.pdf-report
    build:
      context: .
      dockerfile: src/ProjectTracker.PdfReport/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RabbitMQ__Host=${RABBITMQ_HOST}
      - RabbitMQ__VirtualHost=${RABBITMQ_VHOST}
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}

      - Minio__AccessKey=${MINIO_ACCESS_KEY}
      - Minio__SecretKey=${MINIO_SECRET_KEY}
      - Minio__Endpoint=${MINIO_ENDPOINT}
      - Minio__ReportBucket__BucketName=${MINIO_REPORT_BUCKET}
      - Minio__ReportBucket__ContentType=${MINIO_REPORT_CONTENT_TYPE}

      - ProjectTrackerClient__TasksBasePath=${TASKS_BASE_PATH}
      - ProjectTrackerClient__TaskGroupsBasePath=${TASK_GROUPS_BASE_PATH}
      - ProjectTrackerClient__DefaultUri=${PROJECT_TRACKER_URI}

  project-tracker.migration-runner:
    image: project-tracker.migration-runner
    build:
      context: .
      dockerfile: src/ProjectTracker.MigrationRunner/Dockerfile
    environment:
      - ConnectionStrings__PostgreSqlConnection=Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}

  postgres:
    image: postgres:16
    container_name: project-tracker-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d project-tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: project-tracker-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=username
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: project-tracker-minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-setup:
    build:
      context: .
      dockerfile: Dockerfile.minio-setup
    volumes:
      - ./minio-policy.json:/scripts/minio-policy.json
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    depends_on:
      minio:
        condition: service_healthy
  

volumes:
  postgres_data:
  rabbitmq_data:
  minio_data: